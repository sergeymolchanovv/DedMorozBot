from aiogram import types, Dispatcher
from Classes import CommercialContact, ChildrenContact, AdultContact, Contact, Mailing
from aiogram.dispatcher import FSMContext
from aiogram.types import ChatActions, ReplyKeyboardRemove, InputMedia, InputFile
from client_kb import *
from create_bot import dp, bot
from register_handlers import *
from publications import *
from database import *


serg_id = 357864166
orders_chat_id = -824293895
kp_telegram_id = "BQACAgIAAxkBAAICTmN00NTMa9kFcmPkb5F-OMrHnrNwAAJXHgACZNegS7Szlx5ZytAiKwQ"
photo_telegram_id1 = "AgACAgIAAxkBAAMmY24zBdqRkgek32bxTsgB_p7p4OcAAmnCMRv38HBL8RNHv94zprABAAMCAAN5AAMrBA"
photo_telegram_id2 = "AgACAgIAAxkBAAMlY24y-fmiaey5EWtrlG9ZA_VXwmkAAmrCMRv38HBLqkVYgQ1qmxcBAAMCAAN5AAMrBA"
photo_telegram_id3 = "AgACAgIAAxkBAAMoY24zL4GC4m9MvvaflHOzobqP1kQAAuG_MRva6XBLK1CVJO5X6wUBAAMCAAN5AAMrBA"
photo_telegram_id4 = "AgACAgIAAxkBAAMpY24zTHUw576yif38VBT-npbtVX4AAuK_MRva6XBLtd9xja6u-oEBAAMCAAN5AAMrBA"
photo_telegram_id5 = "AgACAgIAAxkBAAMqY24zW_2aXa94PUPGRQ0YxKmZ8KcAAuO_MRva6XBLqX5RVLxniykBAAMCAAN5AAMrBA"
photo_telegram_id6 = "AgACAgIAAxkBAAMkY24y3n3kglLARNwifUdtcYpWH3YAAmvCMRv38HBLVbZpFtxgM3QBAAMCAAN5AAMrBA"
photo_telegram_corporate = "AgACAgIAAxkBAAMjY24ywQikaY0iclVW_HqB7XeselgAAt-_MRva6XBLvxdtn-frkocBAAMCAAN5AAMrBA"
photo_telegram_adult = "AgACAgIAAxkBAAMeY24yl4EpNoe4yIF5SDYNdTjWLhsAAt6_MRva6XBLSRg-hJQXVicBAAMCAAN5AAMrBA"
ded_moroz_letter = "BQACAgIAAxkBAAICT2N00VzFLZdw-ZYiJExubKWmaESuAAJdHgACZNegS_MMDczLw1MrKwQ"

publications_index_dict = {0: (caption_child1, kb_child_caption1_menu, photo_telegram_id1),
                           1: (caption_child2, kb_child_caption2_menu, photo_telegram_id2),
                           2: (caption_child3, kb_child_caption3_menu, photo_telegram_id3),
                           3: (caption_child4, kb_child_caption4_menu, photo_telegram_id4),
                           4: (caption_child5, kb_child_caption5_menu, photo_telegram_id5),
                           5: (caption_child6, kb_child_caption6_menu, photo_telegram_id6)}
index = 0
contact = Contact(False)


# –ë–ª–æ–∫ –æ–±—â–∏—Ö —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
async def command_start(message: types.Message):

    if check_user_in_db(message.chat.id):
        user_data_list = get_user_data_from_db(message.chat.id)
        contact.id = user_data_list[0][0]
        contact.phone = user_data_list[0][1]
        contact.username = user_data_list[0][2]
        contact.gifted = user_data_list[0][3]
        contact.name = user_data_list[0][4]
    else:
        contact.username = message.chat.username
        contact.name = message.chat.full_name
        contact.phone = None
        contact.id = message.chat.id
        push_data(message.chat.id, username=message.chat.username, gifted=0, tg_name=message.chat.full_name)

    await message.answer('''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –≤–æ–ª—à–µ–±–Ω–∏–∫—É –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ - –î–µ–¥—É—à–∫–µ –ú–æ—Ä–æ–∑—É üòä

–Ø –∑–Ω–∞—é, –∫–∞–∫ —Å–ª–æ–∂–Ω–æ –±—ã–≤–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ä–µ–±–µ–Ω–∫–∞, –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π –∏–ª–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É, –ø–æ—ç—Ç–æ–º—É –≤–º–µ—Å—Ç–µ —Å–æ —Å–≤–æ–∏–º–∏ —ç–ª—å—Ñ–∞–º–∏ —Å–æ–∑–¥–∞–ª–∏ —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫!‚ú®

–£–≤–µ—Ä–µ–Ω, —á—Ç–æ –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Ç–æ, —á—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º!

–ê –º–æ—è –≤–Ω—É—á–∫–∞ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞ –±—É–¥–µ—Ç —Ä–∞–¥–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—èüéâ

–ê —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, —è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è –≤–∞—Å –ø–æ–¥–∞—Ä–æ–∫!Ô∏è

–° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º –ù–æ–≤—ã–º –≥–æ–¥–æ–º!üéÑ''')

    menu = await get_keyboard_menu()
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é, –∫–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å', reply_markup=menu)


async def main_menu(message: types.Message):
    contact.id = message.chat.id
    menu = await get_keyboard_menu()
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é, –∫–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å', reply_markup=menu)


async def cb_menu(callback: types.CallbackQuery):
    await callback.message.delete()
    contact.id = callback.message.chat.id
    menu = await get_keyboard_menu()
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é, –∫–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å', reply_markup=menu)


async def get_one_time_gift(callback: types.CallbackQuery):
    update_gifted_in_db(callback.message.chat.id)
    await callback.message.edit_text('''–ú—ã —Ç–∞–∫ —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –∑–¥–µ—Å—å, —á—Ç–æ –î–µ–¥—É—à–∫–∞ –ú–æ—Ä–æ–∑ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –ø–æ–¥–∞—Ä–æ–∫! üéÅ

–≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–≥–æ –í–æ–ª—à–µ–±–Ω–∏–∫–∞‚ú®

–ï–≥–æ –æ—Å—Ç–∞–ª–æ—Å—å –ª–∏—à—å —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –∏ –ø–µ—Ä–µ–¥–∞—Ç—å —Ä–µ–±–µ–Ω–∫—É! –£–≤–µ—Ä–µ–Ω—ã, –æ–Ω –±—É–¥–µ—Ç —Å—á–∞—Å—Ç–ª–∏–≤ü•∞''')
    await bot.send_document(callback.message.chat.id, document=ded_moroz_letter)
    menu = await get_keyboard_menu()
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é, –∫–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å', reply_markup=menu)


async def get_keyboard_menu():
    if check_gifted(contact.id) == False:
        return kb_menu_with_gift
    else:
        return kb_menu


async def cancel_handler(callback: types.CallbackQuery, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await callback.message.answer('–•–æ—Ä–æ—à–æ')


async def get_contact(msg: types.Message):
    global contact
    contact.phone = msg.contact.phone_number
    contact.username = msg.from_user.username
    await data_collection_and_final_sending(msg)


async def get_file_id(msg: types.Message):
    print(msg.document.file_id)


async def get_photo_id(msg: types.Message):
    print(msg.photo[-1].file_id)


async def data_collection_and_final_sending(msg):
    if isinstance(contact, CommercialContact):
        if msg.from_user.full_name != contact.name:
            await bot.send_message(orders_chat_id, '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ üëá' + '\n' + f'–ò–º—è: {contact.name}' + '\n' +
                                            f'Username: @{contact.username}')
        else:
            await bot.send_message(orders_chat_id, '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ üëá' + '\n' +
                                            f'Username: @{contact.username}')
        await return_to_menu(msg)

    elif isinstance(contact, AdultContact):
        if msg.from_user.full_name != contact.name:
            await bot.send_message(orders_chat_id, '–ó–∞–∫–∞–∑ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤ üëá' + '\n' +
                                            f'–ò–º—è: {contact.name}' + '\n' +
                                            f'Username: @{contact.username}')
        else:
            await bot.send_message(orders_chat_id, '–ó–∞–∫–∞–∑ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤ üëá' + '\n' +
                                            f'Username: @{contact.username}')
        await return_to_menu(msg)

    elif isinstance(contact, ChildrenContact):
        if msg.from_user.full_name != contact.name:
            await bot.send_message(orders_chat_id,
                                   '–ó–∞–∫–∞–∑ –¥–ª—è —Ä–µ–±—ë–Ω–∫–∞ üëá' + '\n' + f'–ò–º—è –∑–∞–∫–∞–∑—á–∏–∫–∞: {contact.name}' + '\n' +
                                   f'Username: @{contact.username}' + '\n' +
                                   f'–¢–∏–ø –∑–∞–∫–∞–∑–∞: {contact.order}' + '\n' +
                                   f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π: {contact.children_count}' + '\n' +
                                   f'–í–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π: {contact.age}')
        else:
            await bot.send_message(orders_chat_id,
                                   '–ó–∞–∫–∞–∑ –¥–ª—è —Ä–µ–±—ë–Ω–∫–∞ üëá' + '\n' +
                                   f'Username: @{contact.username}' + '\n' +
                                   f'–¢–∏–ø –∑–∞–∫–∞–∑–∞: {contact.order}' + '\n' +
                                   f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π: {contact.children_count}' + '\n' +
                                   f'–í–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π: {contact.age}')
        await return_to_menu(msg)


async def return_to_menu(msg):
    await bot.send_message(msg.chat.id,
                           '–°–Ω–µ–≥—É—Ä–æ—á–∫–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –≤—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ üòâ' + '\n' + '\n' +
                           '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –∫–æ–Ω—Ç–∞–∫—Ç—ã –°–Ω–µ–≥—É—Ä–æ—á–∫–∏:' +
                           ' +79618881162', reply_markup=social_networks_kb)
    await msg.forward(orders_chat_id)
    update_phone_in_db(msg.chat.id, msg.contact.phone_number)


async def approved_name(callback: types.CallbackQuery):
    await callback.message.delete_reply_markup()
    await callback.message.delete()
    global contact
    contact.name = callback.from_user.full_name
    contact.username = callback.from_user.username
    await callback.message.answer('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º"', reply_markup=contact_kb)
    await callback.message.answer('–õ–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ "–Ω–µ —Ö–æ—á—É –¥–µ–ª–∏—Ç—å—Å—è"', reply_markup=no_contact_kb)


async def no_contact(callback: types.CallbackQuery):
    await callback.message.delete_reply_markup()
    await bot.send_message(callback.message.chat.id,
                           '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –∫–æ–Ω—Ç–∞–∫—Ç—ã –°–Ω–µ–≥—É—Ä–æ—á–∫–∏:' +
                           ' +79618881162', reply_markup=social_networks_kb)
    await callback.message.answer('–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É /Menu', reply_markup=kb_main_menu)


async def disapproved_name(callback: types.CallbackQuery):
    await callback.message.edit_text('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è')
    await CommercialContact.name.set()


async def load_name(message: types.Message, state: FSMContext):
    global contact
    contact.name = message.text
    await state.finish()
    await message.answer('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º" –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ', reply_markup=contact_kb)
    await message.answer('–õ–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ "–Ω–µ —Ö–æ—á—É –¥–µ–ª–∏—Ç—å—Å—è", –Ω–æ —Ç–æ–≥–¥–∞ –º—ã –Ω–µ —Å–º–æ–∂–µ–º —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è', reply_markup=no_contact_kb)


async def command_mailing(message: types.Message):
    if (message.from_user.id == 357864166) or (message.from_user.id == 461358524) or (message.from_user.id == 344743951):
        await message.answer('–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
        await Mailing.text.set()
    else:
        await message.answer('–í–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è')


async def set_mailing_photo(message: types.Message, state: FSMContext):
    global mailing
    mailing = Mailing()
    mailing.text = message.text
    await Mailing.next()
    await message.answer('–í—Å—Ç–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')


async def send_message_to_all_users_in_db(message: types.Message, state: FSMContext):
    mailing.photo = message.photo[-1].file_id
    list_of_ids = get_all_tg_ids_from_db()

    for id in list_of_ids:
        await bot.send_photo(id, caption=mailing.text, photo=mailing.photo)
    await state.finish()


# –ë–ª–æ–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
async def company_order(callback: types.CallbackQuery):
    await assign_contact_class_obj(contact, "CommercialContact")
    await callback.message.delete_reply_markup()
    await callback.message.delete()
    await bot.send_photo(callback.message.chat.id, photo=photo_telegram_corporate,
                         caption=caption_corporate, parse_mode=types.ParseMode.HTML)
    # await callback.message.edit_text()
    await bot.send_document(callback.message.chat.id, document=kp_telegram_id)
    await callback.message.answer('–ï—Å–ª–∏ –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–æ –∫–∞–∫–æ–µ-—Ç–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ –Ω–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ'
                                  ', –æ—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏ –º—ã —Å –≤–∞–º–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–µ–º—Å—è! ', reply_markup=contact_kb)
    await callback.message.answer(f'–í–∞—à–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è: {callback.from_user.full_name}?', reply_markup=yes_no_kb)


# –ë–ª–æ–∫ –≤–∑—Ä–æ—Å–ª—ã—Ö —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
async def adult_order(callback: types.CallbackQuery):
    await callback.message.delete_reply_markup()
    await callback.message.delete()
    await assign_contact_class_obj(contact, "AdultContact")

    await bot.send_photo(callback.message.chat.id, photo=photo_telegram_adult,
                         caption=caption_adult, parse_mode=types.ParseMode.HTML,
                         reply_markup=adult_chose_kb)


async def adult_order_take_contacts(callback: types.CallbackQuery):
    await callback.message.delete_reply_markup()
    await callback.message.delete()
    await callback.message.answer('–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –°–Ω–µ–≥—É—Ä–æ—á–∫–∞ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞–ª–∞—Å—å, –æ—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                                  '—Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –º—ã –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º!' + '\n' +
                                  f'–í–∞—à–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è: {callback.from_user.full_name}?', reply_markup=yes_no_kb)


# –ë–ª–æ–∫ –¥–µ—Ç—Å–∫–∏—Ö —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
async def children_order(callback: types.CallbackQuery):
    await callback.message.delete_reply_markup()
    await callback.message.delete()
    await assign_contact_class_obj(contact, "ChildrenContact")
    await callback.message.answer('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ', reply_markup=children_product_kb)


async def children_order_print_menu(callback: types.CallbackQuery):
    await callback.answer('')
    if callback.data == 'product1':
        await callback.message.delete()
        await bot.send_photo(callback.message.chat.id, photo=publications_index_dict[0][2],
                             caption=publications_index_dict[0][0],
                             reply_markup=publications_index_dict[0][1])
    elif callback.data == 'product2':
        await callback.message.delete()
        await bot.send_photo(callback.message.chat.id, photo=publications_index_dict[1][2],
                             caption=publications_index_dict[1][0],
                             reply_markup=publications_index_dict[1][1])
    elif callback.data == 'product3':
        await callback.message.delete()
        await bot.send_photo(callback.message.chat.id, photo=publications_index_dict[2][2],
                             caption=publications_index_dict[2][0],
                             reply_markup=publications_index_dict[2][1])
    elif callback.data == 'product4':
        await callback.message.delete()
        await bot.send_photo(callback.message.chat.id, photo=publications_index_dict[3][2],
                             caption=publications_index_dict[3][0],
                             reply_markup=publications_index_dict[3][1])
    elif callback.data == 'product5':
        await callback.message.delete()
        await bot.send_photo(callback.message.chat.id, photo=publications_index_dict[4][2],
                             caption=publications_index_dict[4][0],
                             reply_markup=publications_index_dict[4][1])
    elif callback.data == 'product6':
        await callback.message.delete()
        await bot.send_photo(callback.message.chat.id, photo=publications_index_dict[5][2],
                             caption=publications_index_dict[5][0],
                             reply_markup=publications_index_dict[5][1])


async def children_order_menu(callback: types.CallbackQuery):
    await callback.answer('')
    await callback.message.delete()
    await callback.message.answer('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ', reply_markup=children_product_kb)


async def children_order_choise(callback: types.CallbackQuery):
    await callback.answer('')
    await callback.message.delete()
    if callback.data == "children_15_mins":
        contact.order = 'children_15_mins'
    elif callback.data == "children_30_mins":
        contact.order = 'children_30_mins'
    elif callback.data == "ded_moroz_mail":
        contact.order = 'ded_moroz_mail'
    elif callback.data == "forest_meeting":
        contact.order = 'forest_meeting'
    elif callback.data == "online_gift":
        contact.order = 'online_gift'
    elif callback.data == "utrennik":
        contact.order = 'utrennik'
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π', reply_markup=children_count_kb)


async def children_count(callback: types.CallbackQuery):
    await callback.answer('')
    await interpretate_children_count(callback)
    if (callback.data == '4_7childcount') and (contact.order == 'children_15_mins'):
        await callback.message.edit_text('–ë–æ—é—Å—å, –î–µ–¥—É—à–∫–µ –Ω–µ —Ö–≤–∞—Ç–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≤—Å–µ—Ö —Ä–µ–±—è—Ç '
                                      '–ø—Ä–∏ —ç–∫—Å–ø—Ä–µ—Å—Å-–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–∏ (15 –º–∏–Ω.)'
                                      + '\n' + '\n' +
                                      '–ù–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å 30 –º–∏–Ω—É—Ç?', reply_markup=children_30min_kb)
    elif (callback.data == '8morechildcount') and (contact.order == 'children_15_mins'):
        await callback.message.edit_text('–ë–æ—é—Å—å, –î–µ–¥—É—à–∫–µ –Ω–µ —Ö–≤–∞—Ç–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≤—Å–µ—Ö —Ä–µ–±—è—Ç '
                                         '–ø—Ä–∏ —ç–∫—Å–ø—Ä–µ—Å—Å-–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–∏ (15 –º–∏–Ω.)' + '\n' +
                                         '–û–ø–æ–≤–µ—â–∞–µ–º –≤–∞—Å, —á—Ç–æ 8-–π –∏ –∫–∞–∂–¥—ã–π –ø–æ—Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–±—ë–Ω–æ–∫ '
                                         '–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ (300 —Ä—É–±–ª–µ–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ–±—ë–Ω–∫–∞)‚ú® '
                                         '–ï—Å–ª–∏ —É –≤–∞—Å –±–æ–ª—å—à–µ 10 –¥–µ—Ç–µ–π, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∑—è—Ç—å —É—Ç—Ä–µ–Ω–Ω–∏–∫! ' + '\n' + '\n' +
                                         '–ò–∑–º–µ–Ω–∏–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É—Ç—Ä–µ–Ω–Ω–∏–∫?', reply_markup=children_30min_kb_with_morning)
    elif (callback.data == '8morechildcount') and (contact.order == 'children_30_mins'):
        await callback.message.edit_text('–û–ø–æ–≤–µ—â–∞–µ–º –≤–∞—Å, —á—Ç–æ 8-–π –∏ –∫–∞–∂–¥—ã–π –ø–æ—Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–±—ë–Ω–æ–∫ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ' +
                                         ' (300 —Ä—É–±–ª–µ–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ–±—ë–Ω–∫–∞)‚ú® ' +
                                         '–ï—Å–ª–∏ —É –≤–∞—Å –±–æ–ª—å—à–µ 10 –¥–µ—Ç–µ–π, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∑—è—Ç—å —É—Ç—Ä–µ–Ω–Ω–∏–∫! ' +
                                         '–ò–∑–º–µ–Ω–∏–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É—Ç—Ä–µ–Ω–Ω–∏–∫?', reply_markup=children_morning_kb)
    else:
        await callback.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π')
        await ChildrenContact.age.set()


async def children_30_minutes(callback: types.CallbackQuery):
    await callback.answer('')
    if callback.data == '30minsyes':
        await callback.message.edit_text('–•–æ—Ä–æ—à–æ, –ø–æ–º–µ–Ω—è–ª –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞ 30-–º–∏–Ω—É—Ç–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ')
        contact.order = 'children_30_mins, –Ω–æ —Å–Ω–∞—á–∞–ª–∞ —Ö–æ—Ç–µ–ª children_15_mins'
        await callback.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π')
        await ChildrenContact.age.set()
    elif callback.data == 'morning_celebration':
        await callback.message.edit_text('–•–æ—Ä–æ—à–æ, –ø–æ–º–µ–Ω—è–ª –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —É—Ç—Ä–µ–Ω–Ω–∏–∫')
        contact.order = 'utrennik, –Ω–æ —Ö–æ—Ç–µ–ª children_15_mins'
        await callback.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π')
        await ChildrenContact.age.set()
    else:
        await callback.message.edit_text('–•–æ—Ä–æ—à–æ. –¢–æ–≥–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π')
        await ChildrenContact.age.set()


async def children_age(msg: types.Message,  state: FSMContext):
    async with state.proxy() as data:
        data['age'] = msg.text
    async with state.proxy() as data:
        contact.age = data['age']
    await state.finish()
    await msg.answer('–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –°–Ω–µ–≥—É—Ä–æ—á–∫–∞ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞–ª–∞—Å—å, –æ—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                     '—Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –º—ã –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º!' + '\n' +
                     f'–í–∞—à–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è: {msg.from_user.full_name}?', reply_markup=yes_no_kb)


async def interpretate_children_count(callback):
    await callback.answer('')
    if callback.data == '1_3childcount':
        contact.children_count = '1-3 —Ä–µ–±–µ–Ω–∫–∞'
    elif callback.data == '4_7childcount':
        contact.children_count = '4-7 –¥–µ—Ç–µ–π'
    elif callback.data == '35childcount':
        contact.children_count = '3-5 –¥–µ—Ç–µ–π'
    elif callback.data == '58childcount':
        contact.children_count = '5-8 –¥–µ—Ç–µ–π'
    elif callback.data == '8morechildcount':
        contact.children_count = '8 –∏ –±–æ–ª–µ–µ –¥–µ—Ç–µ–π'


async def assign_contact_class_obj(user_contact: Contact, classname: str):
    global contact
    if classname == "AdultContact":
        if user_contact.gifted is False:
            contact = AdultContact(False)
        else:
            contact = AdultContact(True)
    elif classname == "ChildrenContact":
        if user_contact.gifted is False:
            contact = ChildrenContact(False)
        else:
            contact = ChildrenContact(True)
    elif classname == "CommercialContact":
        if user_contact.gifted is False:
            contact = CommercialContact(False)
        else:
            contact = CommercialContact(True)
